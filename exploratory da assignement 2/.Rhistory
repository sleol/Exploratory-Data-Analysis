datetimepos[1]
datetimepos[100]
test<-datetime[1,1:2]
test<-datetime[1]
test
test<-datetime[1]
test<-datetime[2]
test
as.POSIXct(test, format = "%d/%m/%Y, %H:%M%S")
as.POSIXct(strptime("2011-03-27 01:30:00", "%Y-%m-%d %H:%M:%S"))
as.POSIXct(strptime("2010-10-31 01:30:00", "%Y-%m-%d %H:%M:%S"))
as.POSIXct(strptime("2010/10/31 01:30:00", "%Y/%m/%d %H:%M:%S"))
as.POSIXct(strptime("2010/10/31, 01:30:00", "%Y/%m/%d, %H:%M:%S"))
as.POSIXct(strptime("16/12/2006, 17:24:00", "%d/%m/%Y, %H:%M:%S"))
test
typeof(test)
eapply(.GlobalEnv,typeof)
rm(datetimepos)
as.POSIXct(strptime(test, "%d/%m/%Y, %H:%M:%S"))
datetimepos<-as.POSIX(strptime(datetime, "%d/%m/%Y, %H:%M:%S"))
datetimepos<-as.POSIXct(strptime(datetime, "%d/%m/%Y, %H:%M:%S"))
datetimepos[3]
datetimepos[4]
datetimepos[5]
datetimepos[1:20]
datetimepos[1]<-c("Date_Time")
household_power_consumption<-cbind(datetimepos,household_power_consumption)
View(household_power_consumption)
household_power_consumption[1,1]<-c("Date-Time")
household_power_consumption[1,1]$year
a<-household_power_consumption[1,1]
a$year
rm(a)
years<-household_power_consumption[,1]$year
test<-household_power_consumption[household_power_consumption$datetimepos %in% as.Date(c('2007-02-01', '2007-02-02')),]
View(test)
household_power_consumption$V2<-as.date(household_power_consumption$V2, format = "%d/%m/%Y")
household_power_consumption$V2<-as.Date(household_power_consumption$V2, format = "%d/%m/%Y")
View(household_power_consumption)
household_power_consumption$V1<-as.Date(household_power_consumption$V1, format = "%d/%m/%Y")
View(household_power_consumption)
hhpc <- read.csv("~/datasciencecoursera/household_power_consumption.txt", sep=";")
View(hhpc)
hhpc$Date<-as.Date(hhpc$Date)
View(hhpc)
hhpc <- read.csv("~/datasciencecoursera/household_power_consumption.txt", sep=";")
hhpc$Date<-as.Date(hhpc$Date, format = "%d/%m/%Y")
View(hhpc)
?as.Time()
test<-hhpc[hhpc$Date %in% as.Date(c('2007-02-01', '2007-02-02')),]
View(test)
hhpc[66637,]
?strptime()
hhpc$Time<-strptime(hhpc$Time, "%H:%M:%S")
View(hhpc)
hhpc <- read.csv("~/datasciencecoursera/household_power_consumption.txt", sep=";")
datetime<-paste(hhpc$Date,hhpc$Time, sep = ", ")
datetimepos<-as.POSIXct(strptime(datetime, "%d/%m/%Y, %H:%M:%S"))
hhpc<-cbind(datetimepos,hhpc)
hhpc$Date<-as.Date(hhpc$Date, format = "%d/%m/%Y")
data<-hhpc[hhpc$Date %in% as.Date(c('2007-02-01', '2007-02-02')),]
rm(hhpc)
View(data)
?hist()
hist(data$Global_active_power)
data[1,1]
data[1,10]
data[1,11]
data[1,110]
data[1,5]
data[,4:10]<-as.numeric(data[,4:10])
data[,4]<-as.numeric(data[,4])
data[,5]<-as.numeric(data[,5])
data[,6]<-as.numeric(data[,6])
data[,7]<-as.numeric(data[,7])
data[,8]<-as.numeric(data[,8])
data[,9]<-as.numeric(data[,9])
data[,10]<-as.numeric(data[,10])
hist(data$Global_active_power)
hist(data$Global_active_power/1000)
hist(data$Global_active_power/1000,xlab="Global Active Power (kilowatts")
hist(data$Global_active_power/1000,xlab="Global Active Power (kilowatts)")
hist(data$Global_active_power/1000,xlab="Global Active Power (kilowatts)",ylim = c(0,6))
hist(data$Global_active_power/1000,xlab="Global Active Power (kilowatts)",ylim = c(0,1200),xlim = c(0,6))
?plot()
plot(data$Global_active_power/1000,data$datetimepos)
plot(data$datetimepos,data$Global_active_power/1000)
plot(data$datetimepos,data$Global_active_power/1000,ylim = c(0,6),ylab ="Global Active Power (kilowatts)")
plot(data$datetimepos,data$Global_active_power/1000,ylim = c(0,6),ylab ="Global Active Power (kilowatts)",xlab= "")
title(main= "Global Active Power")
plot(data$datetimepos,data$Sub_metering_1,ylim = c(0,40),ylab ="Energy sub metering",xlab= "")
plot(data$datetimepos,data$Sub_metering_1,ylim = c(0,40),ylab ="Energy sub metering",xlab= "", par = "n")
plot(data$datetimepos,data$Sub_metering_1,ylim = c(0,40),ylab ="Energy sub metering",xlab= "", type = "n")
points(data$datetimepos,data$Sub_metering_1)
points(data$datetimepos,data$Sub_metering_2)
points(data$datetimepos,data$Sub_metering_3)
points(data$datetimepos,data$Sub_metering_1,col = "black")
points(data$datetimepos,data$Sub_metering_2, col = "red")
points(data$datetimepos,data$Sub_metering_3, col = "blue")
points(data$datetimepos,data$Sub_metering_1,col = "black", type = "l")
points(data$datetimepos,data$Sub_metering_2, col = "red", type = "l")
points(data$datetimepos,data$Sub_metering_3, col = "blue", type = "l")
plot(data$datetimepos,data$Global_active_power/1000,ylim = c(0,6),ylab ="Global Active Power (kilowatts)",xlab= "", type = "l")
plot(data$datetimepos,data$Sub_metering_1,ylim = c(0,40),ylab ="Energy sub metering",xlab= "", type = "n")
points(data$datetimepos,data$Sub_metering_1,col = "black", type = "l")
points(data$datetimepos,data$Sub_metering_2, col = "red", type = "l")
points(data$datetimepos,data$Sub_metering_3, col = "blue", type = "l")
plot(data$datetimepos,data$Voltage, col = "black", type = "l")
plot(data$datetimepos,data$Global_reactive_power, col = "black", type = "l")
hhpc <- read.csv("~/datasciencecoursera/household_power_consumption.txt", sep=";")
View(hhpc)
plot(hhpc$date,hhpc$Voltage, col = "black", type = "l")
plot(hhpc$Date,hhpc$Voltage, col = "black", type = "l")
plot(data$datetimepos,data$Global_active_power/1000,ylim = c(0,6),ylab ="Global Active Power (kilowatts)",xlab= "", type = "l")
hhpc <- read.csv("~/datasciencecoursera/household_power_consumption.txt", sep=";")
# organise dates & times into new column in posix format. Also convert date column to date format
datetime<-paste(hhpc$Date,hhpc$Time, sep = ", ")
datetimepos<-as.POSIXct(strptime(datetime, "%d/%m/%Y, %H:%M:%S"))
hhpc<-cbind(datetimepos,hhpc)
hhpc$Date<-as.Date(hhpc$Date, format = "%d/%m/%Y")
#Create a Subset of data to the 1st & 2nd of Feb 07, remove remaining data to save space in memory
data<-hhpc[hhpc$Date %in% as.Date(c('2007-02-01', '2007-02-02')),]
View(data)
View(hhpc)
sum(hhpc$Global_active_power)
hist(data$Global_active_power,xlab="Global Active Power (kilowatts)",ylim = c(0,1200),xlim = c(0,6))
data2<-data
data[,4]<-as.numeric(data[,4])
data[,5]<-as.numeric(data[,5])
data[,6]<-as.numeric(data[,6])
data[,7]<-as.numeric(data[,7])
data[,8]<-as.numeric(data[,8])
data[,9]<-as.numeric(data[,9])
View(data2)
sum(data$Global_active_power)
summary(data$Global_active_power)
summary(data2$Global_active_power)
summary(data[1,4])
data[1,4])
data[1,4]
data[1,5]
data[1,3]
data2[1,4]
# read in data
hhpc <- read.csv("~/datasciencecoursera/household_power_consumption.txt", sep=";")
# organise dates & times into new column in posix format. Also convert date column to date format
datetime<-paste(hhpc$Date,hhpc$Time, sep = ", ")
datetimepos<-as.POSIXct(strptime(datetime, "%d/%m/%Y, %H:%M:%S"))
hhpc<-cbind(datetimepos,hhpc)
hhpc$Date<-as.Date(hhpc$Date, format = "%d/%m/%Y")
#Create a Subset of data to the 1st & 2nd of Feb 07, remove remaining data to save space in memory
data<-hhpc[hhpc$Date %in% as.Date(c('2007-02-01', '2007-02-02')),]
rm(hhpc)
#Set data columns as numeric results
data[,4]<-as.numeric(as.character(data[,4]))
data[,5]<-as.numeric(as.character(data[,5]))
data[,6]<-as.numeric(as.character(data[,6]))
data[,7]<-as.numeric(as.character(data[,7]))
data[,8]<-as.numeric(as.character(data[,8]))
data[,9]<-as.numeric(as.character(data[,9]))
png("C:/Users/groyde/Documents/datasciencecoursera/plot2.png")
plot(data$datetimepos,data$Global_active_power,ylab ="Global Active Power (kilowatts)",xlab= "", type = "l")
dev.off
png("C:/Users/groyde/Documents/datasciencecoursera/plot2.png")
plot(data$datetimepos,data$Global_active_power,ylab ="Global Active Power (kilowatts)",xlab= "", type = "l")
dev.off()
library(datasets)
data(movies)
data(airquality)
data(movies)
data(movies)
data(movie)
getwd()
setwd("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted")
?sys.glob
list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted,"*.xls")
list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted,"*.xls")
list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted",patter = "*.xls")
list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted",patter = "*.xls", full.names = TRUE)
files<-list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted",patter = "*.xls", full.names = TRUE)
listOfFiles <- lapply(files, function(x) read.table(x, header = FALSE))
listOfFiles[1]
listOfFiles[1,1]
ldf<-lapply(files, read.xls)
ldf<-lapply(files, read.xlsx)
require(xlsx)
ldf<-lapply(files, read.xlsx)
ldf<-lapply(files, read.xlsx(files,1))
files<-list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted",patter = "*.xls", full.names = TRUE)
for (i in 1:length(files)){}
for (i in 1:length(files)){
inp <- read.csv(file=files[i], header=TRUE)
cname <- name <- sub(".csv", "", files[i])
cat("Read:", files[i], "\trows: ", nrow(inp), " cols: ", ncol(inp),
"\n")
assign( name, inp)
save(inp, file=paste(cname, ".RData", sep=""))
promptData(inp, name=cname)
}
View(`U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted/RTT_Admitted_Adjusted_Commissioner_Feb13_xl_revised.xls`)
files<-list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted",patter = "*.xls", full.names = TRUE)
setwd("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted")
files<-list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted",patter = "*.xls")
for (i in 1:length(files)) {
inp <- read.csv(file=files[i], header=TRUE)
cname <- name <- sub(".csv", "", files[i])
cat("Read:", files[i], "\trows: ", nrow(inp), " cols: ", ncol(inp),
"\n")
assign( name, inp)
save(inp, file=paste(cname, ".RData", sep=""))
promptData(inp, name=cname)
}
View(RTT_Admitted_Adjusted_Commissioner_Feb13_xl_revised.xls.Rd)
files<-list.files("U:/2013_2014/GEM CSU/F Working Papers/Performance Reporting/RTT/May 12 - March 13/Commissioner/Admitted adjusted",patter = "*.xls")
for (i in 1:length(files)) {
inp <- read.xlsx(file=files[i],1)
cname <- name <- sub(".xls", "", files[i])
cat("Read:", files[i], "\trows: ", nrow(inp), " cols: ", ncol(inp),
"\n")
assign( name, inp)
save(inp, file=paste(cname, ".RData", sep=""))
promptData(inp, name=cname)
}
for (i in 1:length(files)) {
+     inp <- read.xlsx(file=files[i],1)
+     cname <- name <- sub(".xls", "", files[i])
+     cat("Read:", files[i], "\trows: ", nrow(inp), " cols: ", ncol(inp),
+         "\n")
+     assign( name, inp)
+     save(inp, file=paste(cname, ".RData", sep=""))
+     promptData(inp, name=cname)
+ }
for (i in 1:length(files)) {
inp <- read.xlsx(file=files[i],1)
cname <- name <- sub(".xls", "", files[i])
cat("Read:", files[i], "\trows: ", nrow(inp), " cols: ", ncol(inp),"\n")
assign( name, inp)
save(inp, file=paste(cname, ".RData", sep=""))
promptData(inp, name=cname)
}
test<-lapply(files, function(x) read.xlsx2(file=x, sheetIndex=1, colIndex=6, header=TRUE, startRow=2, FILENAMEVAR=x))
getwd(0)
getwd()
setwd("~/datasciencecoursera")
files<-list.files("~",patter = "*.csv")
file_list<-list.files("~",patter = "*.csv")
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
getwd()
file_list<-list.files("C:/Users/groyde/Documents/datasciencecoursera",patter = "*.csv")
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
file_list<-list.files("C:/Users/groyde/Documents/datasciencecoursera",patter = "*.csv")
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
View(dataset)
View(temp_dataset)
getwd()
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera", pattern="*.csv")
listOfFiles <- lapply(files, function(x) read.table(x, header = FALSE))
test<-read.csv(files[1], header=TRUE)
View(test)
listOfFiles <- lapply(files, function(x) read.csv(x, header = TRUE))
rm(listOfFiles)
data <- lapply(files, function(x) read.csv(x, header = TRUE))
data[1]
data[1,1]
files
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv")
data <- lapply(files, function(x) read.csv(x, header = TRUE))
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full .names = TRUE)
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full.names = TRUE)
data <- lapply(files, function(x) read.csv(x, header = TRUE))
?rbind
mdata<-rbind(data[1],data[2])
View(mdata)
data[1]
mdata<-do.call("rbind",data)
View(mdata)
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full.names = TRUE)
data <- lapply(files, function(x) read.csv(x, header = TRUE))
mdata<-do.call("rbind",data)
View(mdata)
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full.names = TRUE)
> data <- lapply(files, function(x) read.csv(x, header = TRUE))
> mdata<-do.call("rbind",data)
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full.names = TRUE)data <- lapply(files, function(x) read.csv(x, header = TRUE))
> mdata<-do.call("rbind",data)
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full.names = TRUE)
data <- lapply(files, function(x) read.csv(x, header = TRUE))
mdata<-do.call("rbind",data)
View(mdata)
rm(test)
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full.names = TRUE)
data <- lapply(files, function(x) read.csv(x, header = TRUE))
mdata<-do.call("rbind",data)
View(mdata)
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full.names = TRUE)
data <- lapply(files, function(x) read.csv(x, header = TRUE))
mdata<-do.call("rbind",data)
View(mdata)
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/csv test", pattern="*.csv", full.names = TRUE)
data <- lapply(files, function(x) read.csv(x, header = TRUE))
mdata<-do.call("rbind",data)
View(mdata)
library(xlsx)
install.packages("xlsx2")
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/excel test", pattern="*.xls", full.names = TRUE)
data <- lapply(files, function(x) read.xlsx(x,1, header = TRUE))
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/excel test", pattern="*.xls", full.names = TRUE
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/excel test", pattern="*.xls", full.names = TRUE
files<-list.files("C:/Users/groyde/Documents/datasciencecoursera/excel test", pattern="*.xls", full.names = TRUE)
data <- lapply(files, function(x) read.xlsx(x,1, header = TRUE))
getwd()
setwd("C:/Users/groyde/Documents/datasciencecoursera/exploratory da assignement 2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(NEI)
?unique
unique(NEI$year)
unique(NEI$type)
unique(NEI$Pollutant)
df1999<-NEI[NEI$year==1999]
df1999<-NEI[NEI$year==1999,]
?subset()
?split()
test<-split(NEI,NEI$year)
install.packages(reshape)
install.packages("reshape")
?reshape(0)
df2002<-as.dataframe(test[2])
df2002<-as.data.frame(test[2])
View(df2002)
df1999<-NEI[NEI$year==1999,]
df2002<-NEI[NEI$year==2002,]
df2005<-NEI[NEI$year==2005,]
df2008<-NEI[NEI$year==2008,]
rm(data)
rm(test)
rm(files)
rm(mdata)
View(df1999)
?columnsum
?rowsum
rowsum(NEI$Emissions,NEI$year)
?plot()
years<-unique(NEI$year)
yTot<-rowsum(NEI$Emissions,NEI$year)
plot(yTot)
plot(yTot,years)
plot(years,yTot)
Bdata<- NEI[NEI$fips == "24510",]
View(Bdata)
plot(years,Bdata)
plot(Bdata)
a<-rowsum(Bdata$Emissions, Bdata$year)
plot(years,a)
Bdata<- NEI[NEI$fips == "24510",]
Bpoint<-Bdata[Bdata$type == "POINT",]
Bnpoint<-Bdata[Bdata$type == "NONPOINT",]
Broad<-Bdata[Bdata$type == "ON-ROAD",]
Bnroad<-Bdata[Bdata$type == "NON-ROAD",]
a<-rowsum(Bpoint$Emissions, Bpoint$year)
b<-rowsum(Bnpoint$Emissions, Bnpoint$year)
c<-rowsum(Broad$Emissions, Broad$year)
d<-rowsum(Bnroad$Emissions, Bnroad$year)
plot(years,a, type = "n")
points(years,a)
points(years,b)
points(years,c)
points(years,d)
plot(years,a, type = "n")
points(years,a, col = "black")
points(years,b, col = "blue")
points(years,c, col = "green")
points(years,d, col = "red")
plot(years,b, type = "n")
plot(years,a, type = "n")
plot(years,c, type = "n")
plot(years,d, type = "n")
plot(years,b, type = "n")
points(years,b, col = "blue")
points(years,a, col = "black")
plot(years,b, type = "n", ylim = c(0,2500))
points(years,a, col = "black")
points(years,b, col = "blue")
points(years,c, col = "green")
points(years,d, col = "red")
legend("topright", lty = 1, col = c("black","blue","green", "red"), legend = c("Point", "Non-Point", "Road", "Non-Road"))
legend("topright", col = c("black","blue","green", "red"), legend = c("Point", "Non-Point", "Road", "Non-Road"))
legend("topright", lty = 1, col = c("black","blue","green", "red"), legend = c("Point", "Non-Point", "Road", "Non-Road"))
plot(years,b, type = "n", ylim = c(0,2500))
points(years,a, col = "black", type = "l")
points(years,b, col = "blue", type = "l")
points(years,c, col = "green", type = "l")
points(years,d, col = "red", type = "l")
legend("topright", lty = 1, col = c("black","blue","green", "red"), legend = c("Point", "Non-Point", "Road", "Non-Road"))
?subset
BTot<-rowsum(Bdata$Emissions,Bdata$year)
plot(years,BTot)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(SCC)
?merge
data<-merge(NEI,SCC, by = SCC)
data<-merge(NEI,SCC, by ="SCC")
coal<-subset(data, grepl("coal",EI.Sector))
View(coal)
coal<-data[grepl("coal",EI.Sector),]
coal<-data[grepl("coal",data$EI.Sector),]
coal<-data[grepl("*coal",data$EI.Sector),]
coal<-data[grepl(".*coal",data$EI.Sector),]
coal<-data[grepl(".*Coal",data$EI.Sector),]
coal<-data[grepl("*Coal",data$EI.Sector),]
coal<-data[grepl("Coal",data$EI.Sector),]
View(coal)
coalsummary<-rowsum(coal$Emissions, coal$year)
rm(coalsummary)
CTot<-rowsum(coal$Emissions, coal$year)
plot(years,CTot)
years<-unique(NEI$year)
plot(years,CTot)
Bdata<-<- data[data$fips == "24510",]
Bmotor<-Bdata[grepl("Vehicles",data$EI.Sector),]
BmTot<-rowsum(Bmotor$Emissions, Bmotor$year)
plot(years,BmTot)
Bdata<-data[data$fips == "24510",]
Bmotor<-Bdata[grepl("Vehicles",data$EI.Sector),]
BmTot<-rowsum(Bmotor$Emissions, Bmotor$year)
plot(years,BmTot)
View(Bmotor)
Bmotor<-Bdata[grepl("Vehicles",Bdata$EI.Sector),]
BmTot<-rowsum(Bmotor$Emissions, Bmotor$year)
plot(years,BmTot)
View(Bmotor)
LAdata<-data[data$fips == "06037",]
LAmotor<-LAdata[grepl("Vehicles",LAdata$EI.Sector),]
LAmTot<-rowsum(LAmotor$Emissions, LAmotor$year)
points(years,LAmTot)
plot(years,LAmTot)
plot(years,BmTot)
par(mfrow = c(2,1))
with(data, {
plot(years,BmTot)
plot(years,LAmTot)
}
par(mfrow = c(2,1))
with(data, {
plot(years,BmTot)
plot(years,LAmTot)
})
par(mfrow = c(1,2))
with(data, {
plot(years,BmTot)
plot(years,LAmTot)
})
par(mfrow = c(2,1))
with(data, {
plot(years,BmTot)
plot(years,LAmTot)
})
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(NEI)
data<-merge(NEI,SCC, by = SCC)
data<-merge(NEI,SCC, by = "SCC")
Bdata<-data[data$fips == "24510",]
View(Bdata)
qplot(Bdata$Emissions,Bdata$year,facets = Bdata$type~.)
library(ggplot2)
qplot(Bdata$Emissions,Bdata$year,facets = Bdata$type~.)
qplot(Bdata$Emissions,Bdata$year,facets = Bdata$type)
qplot(Bdata$Emissions,Bdata$year,facets = Bdata$type ~.)
qplot(Bdata$Emissions,Bdata$year)
qplot(Bdata$Emissions,Bdata$year,facets = .~Bdata$type)
qplot(Bdata$Emissions,Bdata$year,facets = .~Bdata$Data.Category)
qplot(Bdata$Emissions,Bdata$year,facets = .~Data.Category)
qplot(Bdata$Emissions,Bdata$year,facets = .~type)
qplot(Emissions,year,data = Bdata, facets = .~type)
qplot(year, Emissions,data = Bdata, facets = .~type)
qplot(year, Emissions,data = Bdata, facets = .~type, geom = c("point","smooth"))
qplot(year, Emissions,data = Bdata, facets = .~type, geom = c("point","smooth"), method = "lm")
